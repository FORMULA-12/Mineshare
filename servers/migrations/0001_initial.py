# Generated by Django 4.0 on 2022-12-02 17:38

import datetime
from django.db import migrations, models
import django.db.models.deletion
import servers.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Banners',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to=servers.models.rename_banner)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Баннеры',
            },
        ),
        migrations.CreateModel(
            name='Colors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=15, verbose_name='Цвет')),
                ('shadow', models.TextField(verbose_name='Тень')),
            ],
            options={
                'verbose_name_plural': 'Раскраски',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('icon', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Атрибуты',
            },
        ),
        migrations.CreateModel(
            name='Servers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('description', models.TextField(blank=True, max_length=1600, verbose_name='Описание')),
                ('ip', models.CharField(max_length=36, verbose_name='Адрес')),
                ('port', models.CharField(default='25565', max_length=5, verbose_name='Порт')),
                ('mode', models.CharField(choices=[('VANILLA', 'Ванилла'), ('ANARCHY', 'Анархия'), ('MMORPG', 'MMO-RPG'), ('MINIGAMES', 'Мини-игры'), ('ADVENTURE', 'Приключение'), ('CONSTRUCTION', 'Строительство')], default='VANILLA', max_length=30, verbose_name='Режим')),
                ('version', models.CharField(choices=[('1.7', '1.7.X'), ('1.8', '1.8.X'), ('1.9', '1.9.X'), ('1.10', '1.10.X'), ('1.11', '1.11.X'), ('1.12', '1.12.X'), ('1.13', '1.13.X'), ('1.14', '1.14.X'), ('1.15', '1.15.X'), ('1.16', '1.16.X'), ('1.17', '1.17.X'), ('1.18', '1.18.X'), ('1.19', '1.19.X')], default='1.18', max_length=10, verbose_name='Версия')),
                ('license', models.BooleanField(default=False, verbose_name='Лицензия')),
                ('launcher', models.BooleanField(default=False, verbose_name='Лаунчер')),
                ('website', models.URLField(blank=True, max_length=60, verbose_name='Сайт')),
                ('premium_status', models.BooleanField(default=False, verbose_name='Премиум-статус')),
                ('premium_regdate', models.DateTimeField(default=datetime.datetime(2022, 12, 2, 19, 38, 38, 436136), verbose_name='Дата регистрации премиум-статуса')),
                ('boost_status', models.BooleanField(default=False, verbose_name='CloudBoost-статус')),
                ('boost_regdate', models.DateTimeField(default=datetime.datetime(2022, 12, 2, 19, 38, 38, 436136), verbose_name='Дата регистрации CloudBoost-статуса')),
                ('online_status', models.BooleanField(default=False, verbose_name='Статус')),
                ('current_players', models.IntegerField(default=0, verbose_name='Игроки (Онлайн)')),
                ('max_players', models.IntegerField(default=20, verbose_name='Игроки (Макс.)')),
                ('description_rate_add', models.BooleanField(default=False, verbose_name='Рейтинг за описание')),
                ('banner_rate_add', models.BooleanField(default=False, verbose_name='Рейтинг за баннер')),
                ('premium_rate_add', models.BooleanField(default=False, verbose_name='Рейтинг за премиум')),
                ('boost_rate_add', models.BooleanField(default=False, verbose_name='Рейтинг за Boost')),
                ('online_rate_add', models.BooleanField(default=False, verbose_name='Рейтинг за онлайн')),
                ('activity_rate_add', models.BooleanField(default=False, verbose_name='Рейтинг за 5+ игроков')),
                ('popularity_rate_add', models.BooleanField(default=False, verbose_name='Рейтинг за 50+ игроков')),
                ('superiority_rate_add', models.BooleanField(default=False, verbose_name='Рейтинг за 500+ игроков')),
                ('verification_rate_add', models.BooleanField(default=False, verbose_name='Рейтинг верификацию')),
                ('rate', models.IntegerField(default=10, verbose_name='Рейтинг')),
                ('rate_old', models.IntegerField(default=0, verbose_name='Рейтинг (Старый)')),
                ('verification', models.BooleanField(default=False, verbose_name='Верификация')),
                ('block', models.BooleanField(default=False, verbose_name='Блокировка')),
                ('date', models.DateTimeField(auto_now=True, verbose_name='Дата регистрации сервера')),
                ('attributes', models.ManyToManyField(null=True, to='servers.Tags')),
                ('icon', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='servers.banners', verbose_name='Картинка')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.user', verbose_name='Владелец')),
                ('premium_color', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='servers.colors', verbose_name='Премиум-раскраска')),
            ],
            options={
                'verbose_name_plural': 'Серверы',
            },
        ),
    ]
